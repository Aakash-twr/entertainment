{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Project-6\\\\movie\\\\src\\\\components\\\\Pages\\\\Search.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { TextField } from \"@mui/material\";\nimport { Button } from \"@mui/material\";\nimport SearchOutlinedIcon from \"@mui/icons-material/SearchOutlined\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport SingleContent from \"../SingleContent/SingleContent\";\nimport CustomPagination from \"../Pagination/CustomPagination\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const [type, setType] = useState(0);\n  const [page, setPage] = useState(1);\n  const [searchText, setSearchText] = useState(\"\");\n  const [content, setContent] = useState([]);\n  const [numOfPages, setNumOfPages] = useState();\n\n  const fetchSearch = async () => {\n    const {\n      data\n    } = await axios.get(`https://api.themoviedb.org/3/search/${type ? \"tv\" : \"movie\"}?api_key=67fefbaa38331d1b02df78df2fb49196&language=en-US&query=${searchText}&page=${page}&include_adult=false`);\n    setContent(data.results);\n    setNumOfPages(data.total_pages);\n    console.log(data);\n  };\n\n  useEffect(() => {\n    window.scroll(0, 0);\n    fetchSearch(); // eslint-disable-next-line\n  }, [type, page]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        margin: \"15px 0\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          flex: 1\n        },\n        className: \"searchBox\",\n        label: \"Search\",\n        variant: \"filled\",\n        onChange: e => setSearchText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        style: {\n          marginLeft: 10\n        },\n        onClick: fetchSearch,\n        children: /*#__PURE__*/_jsxDEV(SearchOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      value: type,\n      indicatorColor: \"secondary\",\n      textColor: \"secondary\",\n      onChange: (event, newValue) => {\n        setType(newValue);\n        setPage(1);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        style: {\n          width: \"50%\"\n        },\n        label: \"Search Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        style: {\n          width: \"50%\"\n        },\n        label: \"Search TV-Series\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trending\",\n      children: [content && content.map(c => {\n        return /*#__PURE__*/_jsxDEV(SingleContent, {\n          id: c.id,\n          poster: c.poster_path,\n          title: c.title || c.name,\n          date: c.first_air_date || c.release_date,\n          media_type: type ? \"tv\" : \"movie\",\n          vote_average: c.vote_average\n        }, c.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this);\n      }), searchText && !content && (type ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No Series Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No Movies Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 46\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), numOfPages > 1 && /*#__PURE__*/_jsxDEV(CustomPagination, {\n      setPage: setPage,\n      numOfPages: numOfPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"Q0JV+GVqO+MA8xC0liFjjvjqMo0=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["D:/React Project-6/movie/src/components/Pages/Search.jsx"],"names":["React","useEffect","useState","TextField","Button","SearchOutlinedIcon","Tabs","Tab","SingleContent","CustomPagination","axios","Search","type","setType","page","setPage","searchText","setSearchText","content","setContent","numOfPages","setNumOfPages","fetchSearch","data","get","results","total_pages","console","log","window","scroll","display","margin","flex","e","target","value","marginLeft","event","newValue","width","map","c","id","poster_path","title","name","first_air_date","release_date","vote_average"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,kBAAP,MAA+B,oCAA/B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AAEA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,EAA5C;;AAEA,QAAMoB,WAAW,GAAG,YAAY;AAC9B,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMb,KAAK,CAACc,GAAN,CACpB,uCAAsCZ,IAAI,GAAG,IAAH,GAAU,OAAQ,kEAAiEI,UAAW,SAAQF,IAAK,sBADjI,CAAvB;AAGAK,IAAAA,UAAU,CAACI,IAAI,CAACE,OAAN,CAAV;AACAJ,IAAAA,aAAa,CAACE,IAAI,CAACG,WAAN,CAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACD,GAPD;;AASAtB,EAAAA,SAAS,CAAC,MAAM;AACd4B,IAAAA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiB,CAAjB;AACAR,IAAAA,WAAW,GAFG,CAGd;AACD,GAJQ,EAIN,CAACV,IAAD,EAAOE,IAAP,CAJM,CAAT;AAMA,sBACE;AAAA,4BACE;AAAK,MAAA,KAAK,EAAE;AAAEiB,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,MAAM,EAAE;AAA3B,OAAZ;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SADT;AAEE,QAAA,SAAS,EAAC,WAFZ;AAGE,QAAA,KAAK,EAAC,QAHR;AAIE,QAAA,OAAO,EAAC,QAJV;AAKE,QAAA,QAAQ,EAAGC,CAAD,IAAOjB,aAAa,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV;AALhC;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAFT;AAGE,QAAA,OAAO,EAAEf,WAHX;AAAA,+BAKE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAiBE,QAAC,IAAD;AACE,MAAA,KAAK,EAAEV,IADT;AAEE,MAAA,cAAc,EAAC,WAFjB;AAGE,MAAA,SAAS,EAAC,WAHZ;AAIE,MAAA,QAAQ,EAAE,CAAC0B,KAAD,EAAQC,QAAR,KAAqB;AAC7B1B,QAAAA,OAAO,CAAC0B,QAAD,CAAP;AACAxB,QAAAA,OAAO,CAAC,CAAD,CAAP;AACD,OAPH;AAAA,8BASE,QAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAEyB,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAA8B,QAAA,KAAK,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,cATF,eAUE,QAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAEA,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAA8B,QAAA,KAAK,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF,eA6BE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,iBACGtB,OAAO,IACNA,OAAO,CAACuB,GAAR,CAAaC,CAAD,IAAO;AACjB,4BACE,QAAC,aAAD;AAEE,UAAA,EAAE,EAAEA,CAAC,CAACC,EAFR;AAGE,UAAA,MAAM,EAAED,CAAC,CAACE,WAHZ;AAIE,UAAA,KAAK,EAAEF,CAAC,CAACG,KAAF,IAAWH,CAAC,CAACI,IAJtB;AAKE,UAAA,IAAI,EAAEJ,CAAC,CAACK,cAAF,IAAoBL,CAAC,CAACM,YAL9B;AAME,UAAA,UAAU,EAAEpC,IAAI,GAAG,IAAH,GAAU,OAN5B;AAOE,UAAA,YAAY,EAAE8B,CAAC,CAACO;AAPlB,WACOP,CAAC,CAACC,EADT;AAAA;AAAA;AAAA;AAAA,gBADF;AAWD,OAZD,CAFJ,EAeG3B,UAAU,IACT,CAACE,OADF,KAEEN,IAAI,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,gBAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFpC,CAfH;AAAA;AAAA;AAAA;AAAA;AAAA,YA7BF,EAgDGQ,UAAU,GAAG,CAAb,iBACC,QAAC,gBAAD;AAAkB,MAAA,OAAO,EAAEL,OAA3B;AAAoC,MAAA,UAAU,EAAEK;AAAhD;AAAA;AAAA;AAAA;AAAA,YAjDJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsDD,CA5ED;;GAAMT,M;;KAAAA,M;AA8EN,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { TextField } from \"@mui/material\";\r\nimport { Button } from \"@mui/material\";\r\nimport SearchOutlinedIcon from \"@mui/icons-material/SearchOutlined\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\n\r\nimport SingleContent from \"../SingleContent/SingleContent\";\r\nimport CustomPagination from \"../Pagination/CustomPagination\";\r\nimport axios from \"axios\";\r\n\r\nconst Search = () => {\r\n  const [type, setType] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [content, setContent] = useState([]);\r\n  const [numOfPages, setNumOfPages] = useState();\r\n\r\n  const fetchSearch = async () => {\r\n    const { data } = await axios.get(\r\n      `https://api.themoviedb.org/3/search/${type ? \"tv\" : \"movie\"}?api_key=67fefbaa38331d1b02df78df2fb49196&language=en-US&query=${searchText}&page=${page}&include_adult=false`\r\n    );\r\n    setContent(data.results);\r\n    setNumOfPages(data.total_pages);\r\n    console.log(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.scroll(0, 0);\r\n    fetchSearch();\r\n    // eslint-disable-next-line\r\n  }, [type, page]);\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ display: \"flex\", margin: \"15px 0\" }}>\r\n        <TextField\r\n          style={{ flex: 1 }}\r\n          className=\"searchBox\"\r\n          label=\"Search\"\r\n          variant=\"filled\"\r\n          onChange={(e) => setSearchText(e.target.value)}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          style={{ marginLeft: 10 }}\r\n          onClick={fetchSearch}\r\n        >\r\n          <SearchOutlinedIcon />\r\n        </Button>\r\n      </div>\r\n      <Tabs\r\n        value={type}\r\n        indicatorColor=\"secondary\"\r\n        textColor=\"secondary\"\r\n        onChange={(event, newValue) => {\r\n          setType(newValue);\r\n          setPage(1);\r\n        }}\r\n      >\r\n        <Tab style={{ width: \"50%\" }} label=\"Search Movies\" />\r\n        <Tab style={{ width: \"50%\" }} label=\"Search TV-Series\" />\r\n      </Tabs>\r\n      <div className=\"trending\">\r\n        {content &&\r\n          content.map((c) => {\r\n            return (\r\n              <SingleContent\r\n                key={c.id}\r\n                id={c.id}\r\n                poster={c.poster_path}\r\n                title={c.title || c.name}\r\n                date={c.first_air_date || c.release_date}\r\n                media_type={type ? \"tv\" : \"movie\"}\r\n                vote_average={c.vote_average}\r\n              />\r\n            );\r\n          })}\r\n        {searchText &&\r\n          !content &&\r\n          (type ? <h2>No Series Found</h2> : <h2>No Movies Found</h2>)}\r\n      </div>\r\n      {numOfPages > 1 && (\r\n        <CustomPagination setPage={setPage} numOfPages={numOfPages} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}