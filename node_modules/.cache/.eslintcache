[{"D:\\React Project-6\\movie\\src\\index.js":"1","D:\\React Project-6\\movie\\src\\App.js":"2","D:\\React Project-6\\movie\\src\\components\\Header\\Header.jsx":"3","D:\\React Project-6\\movie\\src\\components\\MainNav.jsx":"4","D:\\React Project-6\\movie\\src\\components\\Pages\\Trending.jsx":"5","D:\\React Project-6\\movie\\src\\components\\Pages\\Movies.jsx":"6","D:\\React Project-6\\movie\\src\\components\\Pages\\Search.jsx":"7","D:\\React Project-6\\movie\\src\\components\\Pages\\Series.jsx":"8","D:\\React Project-6\\movie\\src\\components\\SingleContent\\SingleContent.jsx":"9","D:\\React Project-6\\movie\\src\\components\\config\\config.jsx":"10","D:\\React Project-6\\movie\\src\\components\\Pagination\\CustomPagination.jsx":"11","D:\\React Project-6\\movie\\src\\components\\Genres.jsx":"12","D:\\React Project-6\\movie\\src\\hooks\\useGenre.jsx":"13","D:\\React Project-6\\movie\\src\\components\\ContentModal\\ContentModal.jsx":"14","D:\\React Project-6\\movie\\src\\components\\Carousel\\Carousel.jsx":"15"},{"size":181,"mtime":1634793806991,"results":"16","hashOfConfig":"17"},{"size":973,"mtime":1634631352122,"results":"18","hashOfConfig":"17"},{"size":299,"mtime":1634812766885,"results":"19","hashOfConfig":"17"},{"size":1704,"mtime":1634640931993,"results":"20","hashOfConfig":"17"},{"size":1312,"mtime":1634656305266,"results":"21","hashOfConfig":"17"},{"size":1983,"mtime":1634740790153,"results":"22","hashOfConfig":"17"},{"size":2815,"mtime":1634757033620,"results":"23","hashOfConfig":"17"},{"size":2032,"mtime":1634742457452,"results":"24","hashOfConfig":"17"},{"size":950,"mtime":1634793212122,"results":"25","hashOfConfig":"17"},{"size":541,"mtime":1634641104420,"results":"26","hashOfConfig":"17"},{"size":633,"mtime":1634657356594,"results":"27","hashOfConfig":"17"},{"size":1971,"mtime":1634813372713,"results":"28","hashOfConfig":"17"},{"size":286,"mtime":1634740645842,"results":"29","hashOfConfig":"17"},{"size":4610,"mtime":1634812216970,"results":"30","hashOfConfig":"17"},{"size":1465,"mtime":1634811666158,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"190129v",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React Project-6\\movie\\src\\index.js",[],["67","68"],"D:\\React Project-6\\movie\\src\\App.js",[],"D:\\React Project-6\\movie\\src\\components\\Header\\Header.jsx",[],"D:\\React Project-6\\movie\\src\\components\\MainNav.jsx",[],"D:\\React Project-6\\movie\\src\\components\\Pages\\Trending.jsx",["69"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport SingleContent from \"../SingleContent/SingleContent\";\r\nimport './Trending.css';\r\nimport CustomPagination from \"../Pagination/CustomPagination\";\r\n\r\n\r\nconst Trending = () => {\r\n   const [page,setPage] = useState(1) \r\n  const [content, setContent] = useState([]);\r\n  const fetchTrending = async () => {\r\n    const { data } = await axios.get(\r\n      `https://api.themoviedb.org/3/trending/all/day?api_key=67fefbaa38331d1b02df78df2fb49196&${page}`\r\n    );\r\n    setContent(data.results);\r\n    \r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTrending();\r\n  }, [page]);\r\n  return (<>\r\n    <div>\r\n      <span className=\"page-title\">Trending</span>\r\n      <div className=\"trending\">\r\n        {content &&\r\n          content.map((c) => {\r\n            return (\r\n              <SingleContent\r\n                key={c.id}\r\n                id={c.id}\r\n                poster={c.poster_path}\r\n                title={c.title || c.name}\r\n                date={c.first_air_date || c.release_date}\r\n                media_type={c.media_type}\r\n                vote_average={c.vote_average}\r\n              />\r\n            );\r\n          })}\r\n      </div>\r\n      <CustomPagination setPage={setPage}/>\r\n    </div>\r\n    \r\n  </>);\r\n};\r\n\r\nexport default Trending;\r\n","D:\\React Project-6\\movie\\src\\components\\Pages\\Movies.jsx",["70"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport SingleContent from \"../SingleContent/SingleContent\";\r\nimport CustomPagination from \"../Pagination/CustomPagination\";\r\nimport Genres from \"../Genres\";\r\nimport useGenre from \"../../hooks/useGenre\";\r\n\r\nconst Movies = () => {\r\n  const[page,setPage] = useState(1);\r\n  const [content,setContent] = useState([]);\r\n  const [numOfPages,setNumOfPages] = useState();\r\n  const [selectedGenres,setSelectedGenres] = useState([]);\r\n  const [genres,setGenres] = useState([]);\r\n  const genreForURL = useGenre(selectedGenres);\r\n  const fetchMovies = async () => {\r\n    const { data } = await axios.get(\r\n      `https://api.themoviedb.org/3/discover/movie?api_key=67fefbaa38331d1b02df78df2fb49196&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&${page}&with_genres=${genreForURL}`\r\n    );\r\n    setContent(data.results);\r\n    setNumOfPages(data.total_pages);\r\n  };\r\n\r\n  useEffect(() => {\r\n     fetchMovies();\r\n  }, [page,genreForURL])\r\n  return (\r\n    <div>\r\n      <span className=\"page-title\">Movies</span>\r\n      <Genres\r\n          type=\"movie\"\r\n          selectedGenres={selectedGenres}\r\n          setSelectedGenres={setSelectedGenres}\r\n          genres={genres}\r\n          setGenres={setGenres}\r\n          setPage={setPage}\r\n      />\r\n      <div className=\"trending\">\r\n        {content &&\r\n          content.map((c) => {\r\n            return (\r\n              <SingleContent\r\n                key={c.id}\r\n                id={c.id}\r\n                poster={c.poster_path}\r\n                title={c.title || c.name}\r\n                date={c.first_air_date || c.release_date}\r\n                media_type=\"movie\"\r\n                vote_average={c.vote_average}\r\n              />\r\n            );\r\n          })}\r\n      </div>\r\n      {numOfPages>1 && (\r\n        <CustomPagination setPage={setPage} numOfPages={numOfPages}/>\r\n\r\n      )}\r\n          </div>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","D:\\React Project-6\\movie\\src\\components\\Pages\\Search.jsx",[],"D:\\React Project-6\\movie\\src\\components\\Pages\\Series.jsx",["71"],"\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport SingleContent from \"../SingleContent/SingleContent\";\r\nimport CustomPagination from \"../Pagination/CustomPagination\";\r\nimport Genres from \"../Genres\";\r\nimport useGenre from \"../../hooks/useGenre\";\r\n\r\nconst Series = () => {\r\n    const[page,setPage] = useState(1);\r\n    const [content,setContent] = useState([]);\r\n    const [numOfPages,setNumOfPages] = useState();\r\n    const [selectedGenres,setSelectedGenres] = useState([]);\r\n    const [genres,setGenres] = useState([]);\r\n    const genreForURL = useGenre(selectedGenres);\r\n    const fetchMovies = async () => {\r\n      const { data } = await axios.get(\r\n        `https://api.themoviedb.org/3/discover/tv?api_key=67fefbaa38331d1b02df78df2fb49196&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&${page}&with_genres=${genreForURL}`\r\n      );\r\n      setContent(data.results);\r\n      setNumOfPages(data.total_pages);\r\n    };\r\n  \r\n    useEffect(() => {\r\n       fetchMovies();\r\n    }, [page,genreForURL])\r\n    return (\r\n        <div>\r\n             <span className=\"page-title\">TV-Series</span>\r\n             <Genres\r\n          type=\"tv\"\r\n          selectedGenres={selectedGenres}\r\n          setSelectedGenres={setSelectedGenres}\r\n          genres={genres}\r\n          setGenres={setGenres}\r\n          setPage={setPage}\r\n      />\r\n      <div className=\"trending\">\r\n        {content &&\r\n          content.map((c) => {\r\n            return (\r\n              <SingleContent\r\n                key={c.id}\r\n                id={c.id}\r\n                poster={c.poster_path}\r\n                title={c.title || c.name}\r\n                date={c.first_air_date || c.release_date}\r\n                media_type=\"tv\"\r\n                vote_average={c.vote_average}\r\n              />\r\n            );\r\n          })}\r\n      </div>\r\n      {numOfPages>1 && (\r\n        <CustomPagination setPage={setPage} numOfPages={numOfPages}/>\r\n\r\n      )} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Series;\r\n","D:\\React Project-6\\movie\\src\\components\\SingleContent\\SingleContent.jsx",[],"D:\\React Project-6\\movie\\src\\components\\config\\config.jsx",[],"D:\\React Project-6\\movie\\src\\components\\Pagination\\CustomPagination.jsx",[],"D:\\React Project-6\\movie\\src\\components\\Genres.jsx",["72","73"],"import { Chip } from \"@mui/material\";\r\nimport { margin } from \"@mui/system\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect } from \"react\";\r\nimport \"./Genres.css\";\r\n\r\nconst Genres = ({\r\n  selectedGenres,\r\n  setSelectedGenres,\r\n  genres,\r\n  setGenres,\r\n  type,\r\n  setPage,\r\n}) => {\r\n  const handleAdd = (genre) => {\r\n    setSelectedGenres([...selectedGenres, genre]);\r\n    setGenres(\r\n      genres.filter((g) => {\r\n        return g.id !== genre.id;\r\n      })\r\n    );\r\n    setPage(1);\r\n  };\r\n\r\n  const handleRemove = (genre) => {\r\n      setSelectedGenres(\r\n          selectedGenres.filter((selected) => {return selected.id !== genre.id})\r\n      );\r\n      setGenres([...genres,genre]);\r\n      setPage(1);\r\n  }\r\n\r\n  const fetchGenres = async () => {\r\n    const { data } = await axios.get(\r\n      `https://api.themoviedb.org/3/genre/${type}/list?api_key=67fefbaa38331d1b02df78df2fb49196&language=en-US`\r\n    );\r\n    setGenres(data.genres);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchGenres();\r\n\r\n    return () => {\r\n      setGenres({});\r\n    };\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"tags\" style={{ padding: \"20px 0\" }}>\r\n        {selectedGenres &&\r\n          selectedGenres.map((genre) => {\r\n            return (\r\n              <Chip\r\n                label={genre.name}\r\n                style={{ margin: 2 }}\r\n                size=\"medium\"\r\n                color=\"primary\"\r\n                key={genre.id}\r\n                clickable\r\n                onDelete={() => handleRemove(genre)}\r\n              />\r\n            );\r\n          })}\r\n        {genres &&\r\n          genres.map((genre) => {\r\n            return (\r\n              <Chip\r\n                label={genre.name}\r\n                style={{ margin: 2 }}\r\n                size=\"medium\"\r\n                key={genre.id}\r\n                clickable\r\n                onClick={()=> handleAdd(genre)}\r\n              />\r\n            );\r\n          })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Genres;\r\n","D:\\React Project-6\\movie\\src\\hooks\\useGenre.jsx",[],"D:\\React Project-6\\movie\\src\\components\\ContentModal\\ContentModal.jsx",["74","75","76"],"D:\\React Project-6\\movie\\src\\components\\Carousel\\Carousel.jsx",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":21,"column":6,"nodeType":"83","endLine":21,"endColumn":12,"suggestions":"84"},{"ruleId":"81","severity":1,"message":"85","line":25,"column":6,"nodeType":"83","endLine":25,"endColumn":24,"suggestions":"86"},{"ruleId":"81","severity":1,"message":"85","line":26,"column":8,"nodeType":"83","endLine":26,"endColumn":26,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":16},{"ruleId":"81","severity":1,"message":"92","line":46,"column":6,"nodeType":"83","endLine":46,"endColumn":8,"suggestions":"93"},{"ruleId":"88","severity":1,"message":"94","line":3,"column":8,"nodeType":"90","messageId":"91","endLine":3,"endColumn":11},{"ruleId":"88","severity":1,"message":"95","line":7,"column":8,"nodeType":"90","messageId":"91","endLine":7,"endColumn":18},{"ruleId":"81","severity":1,"message":"96","line":68,"column":6,"nodeType":"83","endLine":68,"endColumn":8,"suggestions":"97"},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchTrending'. Either include it or remove the dependency array.","ArrayExpression",["100"],"React Hook useEffect has a missing dependency: 'fetchMovies'. Either include it or remove the dependency array.",["101"],["102"],"no-unused-vars","'margin' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'fetchGenres' and 'setGenres'. Either include them or remove the dependency array. If 'setGenres' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["103"],"'Box' is defined but never used.","'Typography' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchData' and 'fetchVideo'. Either include them or remove the dependency array.",["104"],"no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},{"desc":"107","fix":"109"},{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},"Update the dependencies array to be: [fetchTrending, page]",{"range":"114","text":"115"},"Update the dependencies array to be: [page, genreForURL, fetchMovies]",{"range":"116","text":"117"},{"range":"118","text":"117"},"Update the dependencies array to be: [fetchGenres, setGenres]",{"range":"119","text":"120"},"Update the dependencies array to be: [fetchData, fetchVideo]",{"range":"121","text":"122"},[632,638],"[fetchTrending, page]",[1014,1032],"[page, genreForURL, fetchMovies]",[1047,1065],[1050,1052],"[fetchGenres, setGenres]",[1943,1945],"[fetchData, fetchVideo]"]